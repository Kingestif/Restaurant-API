services:
  api: 
    # build: .
    image: estifo/restaurant-api:1.0      # pull from docker hub after we pushed our dockerfile
    container_name: Myrestaurant-api
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
    env_file:
      - .env
    networks:
      - restaurant-network

  postgres:
    image: postgres:17-alpine
    container_name: Mypostgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - restaurant-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:7.4.5-alpine
    container_name: Myredis
    restart: always
    ports:
      - "6379:6379"

    networks:
      - restaurant-network
    volumes:
      - redis-data:/data


  nginx:
    image: nginx:1.28.0-alpine
    container_name: Mynginx
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
      - "443:443"
    networks:
      - restaurant-network
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs:/etc/letsencrypt:ro
      - ./webroot:/var/www/certbot:ro

  certbot:
    image: certbot/certbot
    container_name: Mycertbot
    volumes:    
      - ./certs:/etc/letsencrypt
      - ./webroot:/var/www/certbot

    entrypoint: >
      sh -c "certbot certonly --webroot --webroot-path=/var/www/certbot
      --email kingestiff@gmail.com --agree-tos --no-eff-email
      -d myrestaurant.duckdns.org"

networks:
  restaurant-network:

volumes:
  postgres-data:
  redis-data:
